AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Description: The environment for this stack
    AllowedValues:
      - dev
      - prod
  IdPoolStack:
    Type: String
    Description: The name of the id pool stack
Resources:
  TopApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../dist/js
      Handler: index.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables: 
          TABLE_NAME: !Ref Table
            
  Table:
    Type: AWS::Serverless::SimpleTable
  
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
        StageName: !Ref Environment
        DefinitionBody:
          swagger: "2.0"
          info:
            version: "1.0"
            title: "xustosapidev"
          schemes:
            - "https"
          paths:
            /{proxy+}:
              x-amazon-apigateway-any-method:
                produces:
                - application/json
                parameters:
                - name: proxy
                  in: path
                  required: true
                  type: string
                responses: {}
                x-amazon-apigateway-integration:
                  uri: !Join [ "", ["arn:aws:apigateway:", !Ref "AWS::Region", ":lambda:path/2015-03-31/functions/", !GetAtt TopApiFunction.Arn, "/invocations"] ]
                  passthroughBehavior: "when_no_match"
                  httpMethod: "POST"
                  type: "aws_proxy"
                security:
                  - cognito_authorizer: []
          securityDefinitions:
            cognito_authorizer:
              type: "apiKey"
              name: "Authorization"
              in: "header"
              x-amazon-apigateway-authtype: "cognito_user_pools"
              x-amazon-apigateway-authorizer:
                type: "cognito_user_pools"
                providerARNs:
                  - Fn::ImportValue:
                      !Sub "${IdPoolStack}-UserPool::Arn"
          options:
            consumes:
            - application/json
            produces:
            - application/json
            responses:
              "200":
                description: "200 response"
                schema:
                  $ref: "#/definitions/Empty"
                headers:
                  Access-Control-Allow-Origin:
                    type: string
                  Access-Control-Allow-Methods:
                    type: string
                  Access-Control-Allow-Headers:
                    type: string

Outputs:
  RestApiId:
    Value: !Ref RestApi
    Export:
      Name: !Join
        - ''
        - - !Ref AWS::StackName
          - "-RestApi::Id"
